# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:
  # Exercise: Reusable Job Code
  # print_pipeline_id:
  #   parameters:
  #     id: 
  #       type: string
  #   steps:
  #     - run: echo << parameters.id >>

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Exercise: Infrastructure Creation
  # Exercise - Rollback
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      # - destroy_environment
  # Exercise: Config and Deployment
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.11-rc-alpine
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #           # You can get this ID in the section where you registered the SSH Key
  #           fingerprints: ["e0:c2:12:30:54:bc:a8:15:2b:da:e4:49:3f:fa:40:ab"] 
  #     - run:
  #           name: Install Ansible
  #           command: |
  #             # Install Ansible
  #             apk add --update ansible
  #     - run:
  #           name: Run Playbook and Configure server
  #           command: |
  #             ansible-playbook -i inventory.txt main4.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  project3_workflow:
      jobs:
        - create_infrastructure
        - smoke_test:
            requires: 
              - create_infrastructure
